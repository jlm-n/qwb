import type { QBittorrentPreferences, QBittorrentPreferencesInput } from '@/types/QBittorrentPreferences'

export class QBittorrentPreferencesAssembler {
	static fromFormElement(element: HTMLFormElement): QBittorrentPreferencesInput {
		const data = Object.fromEntries(new FormData(element))
		return QBittorrentPreferencesAssembler.fromServerSettingsForm(data)
	}

	static fromServerSettingsForm(data: Record<string, FormDataEntryValue>): QBittorrentPreferencesInput {
		return {
			// Behavior
			locale: data.locale?.toString(),
			file_log_enabled: 'file_log_enabled' in data,
			file_log_path: data.file_log_path?.toString(),
			file_log_backup_enabled: 'file_log_backup_enabled' in data,
			file_log_max_size: 'file_log_max_size' in data ? +data.file_log_max_size : undefined,
			file_log_delete_old: 'file_log_delete_old' in data,
			file_log_age: 'file_log_age' in data ? +data.file_log_age : undefined,
			file_log_age_type: 'file_log_age_type' in data ? +data.file_log_age_type : undefined,
			performance_warning: 'performance_warning' in data,

			// Download
			save_path: data.save_path?.toString(),
			torrent_content_layout: data.torrent_content_layout?.toString(),
			add_to_top_of_queue: 'add_to_top_of_queue' in data,
			add_stopped_enabled: 'add_stopped_enabled' in data,
			torrent_stop_condition: data.torrent_stop_condition?.toString(),
			merge_trackers: 'merge_trackers' in data,
			auto_delete_mode: 'auto_delete_mode' in data ? 1 : 0,
			preallocate_all: 'preallocate_all' in data,
			incomplete_files_ext: 'incomplete_files_ext' in data,
			use_unwanted_folder: 'use_unwanted_folder' in data,
			auto_tmm_enabled: 'auto_tmm_enabled' in data,
			torrent_changed_tmm_enabled: 'torrent_changed_tmm_enabled' in data,
			save_path_changed_tmm_enabled: 'save_path_changed_tmm_enabled' in data,
			category_changed_tmm_enabled: 'category_changed_tmm_enabled' in data,
			use_subcategories: 'use_subcategories' in data,
			use_category_paths_in_manual_mode: 'use_category_paths_in_manual_mode' in data,
			temp_path_enabled: 'temp_path_enabled' in data,
			temp_path: data.temp_path?.toString(),
			export_dir: data.export_dir?.toString(),
			export_dir_fin: data.export_dir_fin?.toString(),
			// scan_dirs: TODO
			exclude_file_names_enabled: 'exclude_file_names_enabled' in data,
			exclude_file_names: data.exclude_file_names?.toString(),
			mail_notification_enabled: 'mail_notification_enabled' in data,
			mail_notification_sender: data.mail_notification_sender?.toString(),
			mail_notification_email: data.mail_notification_email?.toString(),
			mail_notification_smtp: data.mail_notification_smtp?.toString(),
			mail_notification_ssl_enabled: 'mail_notification_ssl_enabled' in data,
			mail_notification_auth_enabled: 'mail_notification_auth_enabled' in data,
			mail_notification_username: data.mail_notification_username?.toString(),
			mail_notification_password: data.mail_notification_password?.toString(),
			autorun_on_torrent_added_enabled: 'autorun_on_torrent_added_enabled' in data,
			autorun_on_torrent_added_program: data.autorun_on_torrent_added_program?.toString(),
			autorun_enabled: 'autorun_enabled' in data,
			autorun_program: data.autorun_program?.toString(),

			// Connection
			bittorrent_protocol: 'bittorrent_protocol' in data ? +data.bittorrent_protocol.toString() : undefined,
			listen_port: 'listen_port' in data ? +data.listen_port.toString() : undefined,
			upnp: 'upnp' in data,
			upnp_lease_duration: 'upnp_lease_duration' in data ? +data.upnp_lease_duration.toString() : undefined,
			max_connec: 'max_connec' in data ? +data.max_connec.toString() : undefined,
			max_connec_per_torrent: 'max_connec_per_torrent' in data ? +data.max_connec_per_torrent.toString() : undefined,
			max_uploads: 'max_uploads' in data ? +data.max_uploads.toString() : undefined,
			max_uploads_per_torrent: 'max_uploads_per_torrent' in data ? +data.max_uploads_per_torrent.toString() : undefined,
			i2p_enabled: 'i2p_enabled' in data,
			i2p_address: data.i2p_address?.toString(),
			i2p_port: 'i2p_port' in data ? +data.i2p_port?.toString() : undefined,
			i2p_mixed_mode: 'i2p_mixed_mode' in data,
			i2p_inbound_quantity: 'i2p_inbound_quantity' in data ? +data.i2p_inbound_quantity.toString() : undefined,
			i2p_outbound_quantity: 'i2p_outbound_quantity' in data ? +data.i2p_outbound_quantity.toString() : undefined,
			i2p_inbound_length: 'i2p_inbound_length' in data ? +data.i2p_inbound_length.toString() : undefined,
			i2p_outbound_length: 'i2p_outbound_length' in data ? +data.i2p_outbound_length.toString() : undefined,
			proxy_type: data.proxy_type?.toString() as QBittorrentPreferences['proxy_type'],
			proxy_ip: data.proxy_ip?.toString(),
			proxy_port: 'proxy_port' in data ? +data.proxy_port.toString() : undefined,
			proxy_auth_enabled: 'proxy_auth_enabled' in data,
			proxy_username: data.proxy_username?.toString(),
			proxy_password: data.proxy_password?.toString(),
			proxy_hostname_lookup: 'proxy_hostname_lookup' in data,
			proxy_bittorrent: 'proxy_bittorrent' in data,
			proxy_peer_connections: 'proxy_peer_connections' in data,
			proxy_rss: 'proxy_rss' in data,
			proxy_misc: 'proxy_misc' in data,
			ip_filter_enabled: 'ip_filter_enabled' in data,
			ip_filter_path: data.ip_filter_path?.toString(),
			ip_filter_trackers: 'ip_filter_trackers' in data,
			banned_IPs: data.banned_IPs?.toString(),

			// Speed
			up_limit: 'up_limit' in data ? +data.up_limit.toString() : undefined,
			dl_limit: 'dl_limit' in data ? +data.dl_limit.toString() : undefined,
			alt_up_limit: 'alt_up_limit' in data ? +data.alt_up_limit.toString() : undefined,
			alt_dl_limit: 'alt_dl_limit' in data ? +data.alt_dl_limit?.toString() : undefined,
			scheduler_enabled: 'scheduler_enabled' in data,
			schedule_from_hour: 'schedule_from_hour' in data ? +data.schedule_from_hour.toString() : undefined,
			schedule_from_min: 'schedule_from_min' in data ? +data.schedule_from_min.toString() : undefined,
			schedule_to_hour: 'schedule_to_hour' in data ? +data.schedule_to_hour.toString() : undefined,
			schedule_to_min: 'schedule_to_min' in data ? +data.schedule_to_min.toString() : undefined,
			scheduler_days: 'scheduler_days' in data ? +data.scheduler_days.toString() : undefined,
			limit_utp_rate: 'limit_utp_rate' in data,
			limit_tcp_overhead: 'limit_tcp_overhead' in data,
			limit_lan_peers: 'limit_lan_peers' in data,

			// Bittorrent
			dht: 'dht' in data,
			dht_bootstrap_nodes: data.dht_bootstrap_nodes?.toString(),
			pex: 'pex' in data,
			lsd: 'lsd' in data,
			encryption: 'encryption' in data ? +data.encryption.toString() : undefined,
			anonymous_mode: 'anonymous_mode' in data,
			max_active_checking_torrents:
				'max_active_checking_torrents' in data ? +data.max_active_checking_torrents.toString() : undefined,
			queueing_enabled: 'queueing_enabled' in data,
			max_active_downloads: 'max_active_downloads' in data ? +data.max_active_downloads.toString() : undefined,
			max_active_uploads: 'max_active_uploads' in data ? +data.max_active_uploads.toString() : undefined,
			max_active_torrents: 'max_active_torrents' in data ? +data.max_active_torrents.toString() : undefined,
			dont_count_slow_torrents: 'dont_count_slow_torrents' in data,
			slow_torrent_dl_rate_threshold:
				'slow_torrent_dl_rate_threshold' in data ? +data.slow_torrent_dl_rate_threshold.toString() : undefined,
			slow_torrent_ul_rate_threshold:
				'slow_torrent_ul_rate_threshold' in data ? +data.slow_torrent_ul_rate_threshold.toString() : undefined,
			slow_torrent_inactive_timer: 'slow_torrent_inactive_timer' in data ? +data.slow_torrent_inactive_timer.toString() : undefined,
			max_ratio_act: 'max_ratio_act' in data ? +data.max_ratio_act.toString() : undefined,
			max_ratio_enabled: 'max_ratio_enabled' in data,
			max_ratio: 'max_ratio' in data ? +data.max_ratio.toString() : undefined,
			max_seeding_time_enabled: 'max_seeding_time_enabled' in data,
			max_seeding_time: 'max_seeding_time' in data ? +data.max_seeding_time.toString() : undefined,
			max_inactive_seeding_time: 'max_inactive_seeding_time' in data ? +data.max_inactive_seeding_time.toString() : undefined,
			add_trackers_enabled: 'add_trackers_enabled' in data,
			add_trackers: data.add_trackers?.toString(),

			// RSS
			rss_processing_enabled: 'rss_processing_enabled' in data,
			rss_refresh_interval: 'rss_refresh_interval' in data ? +data.rss_refresh_interval.toString() : undefined,
			rss_fetch_delay: 'rss_fetch_delay' in data ? +data.rss_fetch_delay.toString() : undefined,
			rss_max_articles_per_feed: 'rss_max_articles_per_feed' in data ? +data.rss_max_articles_per_feed.toString() : undefined,
			rss_auto_downloading_enabled: 'rss_auto_downloading_enabled' in data,
			rss_download_repack_proper_episodes: 'rss_download_repack_proper_episodes' in data,
			rss_smart_episode_filters: data.rss_smart_episode_filters?.toString(),

			// WebUI
			web_ui_address: data.web_ui_address?.toString(),
			web_ui_port: 'web_ui_port' in data ? +data.web_ui_port?.toString() : undefined,
			web_ui_upnp: 'web_ui_upnp' in data,
			use_https: 'use_https' in data,
			web_ui_https_cert_path: data.web_ui_https_cert_path?.toString(),
			web_ui_https_key_path: data.web_ui_https_key_path?.toString(),
			web_ui_username: data.web_ui_username?.toString(),
			web_ui_password: data.web_ui_password?.toString() || undefined,
			bypass_local_auth: 'bypass_local_auth' in data,
			bypass_auth_subnet_whitelist_enabled: 'bypass_auth_subnet_whitelist_enabled' in data,
			bypass_auth_subnet_whitelist: data.bypass_auth_subnet_whitelist?.toString(),
			web_ui_max_auth_fail_count: 'web_ui_max_auth_fail_count' in data ? +data.web_ui_max_auth_fail_count.toString() : undefined,
			web_ui_ban_duration: 'web_ui_ban_duration' in data ? +data.web_ui_ban_duration.toString() : undefined,
			web_ui_session_timeout: 'web_ui_session_timeout' in data ? +data.web_ui_session_timeout.toString() : undefined,
			alternative_webui_enabled: 'alternative_webui_enabled' in data,
			alternative_webui_path: data.alternative_webui_path?.toString(),
			web_ui_clickjacking_protection_enabled: 'web_ui_clickjacking_protection_enabled' in data,
			web_ui_csrf_protection_enabled: 'web_ui_csrf_protection_enabled' in data,
			web_ui_secure_cookie_enabled: 'web_ui_secure_cookie_enabled' in data,
			web_ui_host_header_validation_enabled: 'web_ui_host_header_validation_enabled' in data,
			web_ui_domain_list: data.web_ui_domain_list?.toString(),
			web_ui_use_custom_http_headers_enabled: 'web_ui_use_custom_http_headers_enabled' in data,
			web_ui_custom_http_headers: data.web_ui_custom_http_headers?.toString(),
			web_ui_reverse_proxy_enabled: 'web_ui_reverse_proxy_enabled' in data,
			web_ui_reverse_proxies_list: data.web_ui_reverse_proxies_list?.toString(),
			dyndns_enabled: 'dyndns_enabled' in data,
			dyndns_service: 'dyndns_service' in data ? +data.dyndns_service.toString() : undefined,
			dyndns_domain: data.dyndns_domain?.toString(),
			dyndns_username: data.dyndns_username?.toString(),
			dyndns_password: data.dyndns_password?.toString(),

			// Advanced
			resume_data_storage_type: data.resume_data_storage_type?.toString() as QBittorrentPreferences['resume_data_storage_type'],
			torrent_content_remove_option:
				data.torrent_content_remove_option?.toString() as QBittorrentPreferences['torrent_content_remove_option'],
			memory_working_set_limit: 'memory_working_set_limit' in data ? +data.memory_working_set_limit?.toString() : undefined,
			current_network_interface: data.current_network_interface?.toString(),
			current_interface_address: data.current_interface_address?.toString(),
			save_resume_data_interval: 'save_resume_data_interval' in data ? +data.save_resume_data_interval?.toString() : undefined,
			torrent_file_size_limit: 'torrent_file_size_limit' in data ? +data.torrent_file_size_limit?.toString() : undefined,
			recheck_completed_torrents: 'recheck_completed_torrents' in data,
			app_instance_name: data.app_instance_name?.toString(),
			refresh_interval: 'refresh_interval' in data ? +data.refresh_interval?.toString() : undefined,
			resolve_peer_countries: 'resolve_peer_countries' in data,
			reannounce_when_address_changed: 'reannounce_when_address_changed' in data,
			enable_embedded_tracker: 'enable_embedded_tracker' in data,
			embedded_tracker_port: 'embedded_tracker_port' in data ? +data.embedded_tracker_port?.toString() : undefined,
			embedded_tracker_port_forwarding: 'embedded_tracker_port_forwarding' in data,
			ignore_ssl_errors: 'ignore_ssl_errors' in data,
			python_executable_path: data.python_executable_path?.toString(),
			bdecode_depth_limit: 'bdecode_depth_limit' in data ? +data.bdecode_depth_limit?.toString() : undefined,
			bdecode_token_limit: 'bdecode_token_limit' in data ? +data.bdecode_token_limit?.toString() : undefined,
			async_io_threads: 'async_io_threads' in data ? +data.async_io_threads?.toString() : undefined,
			hashing_threads: 'hashing_threads' in data ? +data.hashing_threads?.toString() : undefined,
			file_pool_size: 'file_pool_size' in data ? +data.file_pool_size?.toString() : undefined,
			checking_memory_use: 'checking_memory_use' in data ? +data.checking_memory_use?.toString() : undefined,
			disk_queue_size: 'disk_queue_size' in data ? +data.disk_queue_size?.toString() : undefined,
			disk_io_type: ('disk_io_type' in data ? +data.disk_io_type?.toString() : undefined) as QBittorrentPreferences['disk_io_type'],
			disk_io_read_mode: ('disk_io_read_mode' in data
				? +data.disk_io_read_mode?.toString()
				: undefined) as QBittorrentPreferences['disk_io_read_mode'],
			disk_io_write_mode: ('disk_io_write_mode' in data
				? +data.disk_io_write_mode?.toString()
				: undefined) as QBittorrentPreferences['disk_io_write_mode'],
			enable_piece_extent_affinity: 'enable_piece_extent_affinity' in data,
			enable_upload_suggestions: 'enable_upload_suggestions' in data,
			send_buffer_watermark: 'send_buffer_watermark' in data ? +data.send_buffer_watermark?.toString() : undefined,
			send_buffer_low_watermark: 'send_buffer_low_watermark' in data ? +data.send_buffer_low_watermark?.toString() : undefined,
			send_buffer_watermark_factor:
				'send_buffer_watermark_factor' in data ? +data.send_buffer_watermark_factor?.toString() : undefined,
			connection_speed: 'connection_speed' in data ? +data.connection_speed?.toString() : undefined,
			outgoing_ports_min: 'outgoing_ports_min' in data ? +data.outgoing_ports_min?.toString() : undefined,
			outgoing_ports_max: 'outgoing_ports_max' in data ? +data.outgoing_ports_max?.toString() : undefined,
			peer_tos: 'peer_tos' in data ? +data.peer_tos?.toString() : undefined,
			utp_tcp_mixed_mode: ('utp_tcp_mixed_mode' in data
				? +data.utp_tcp_mixed_mode?.toString()
				: undefined) as QBittorrentPreferences['utp_tcp_mixed_mode'],
			idn_support_enabled: 'idn_support_enabled' in data,
			enable_multi_connections_from_same_ip: 'enable_multi_connections_from_same_ip' in data,
			validate_https_tracker_certificate: 'validate_https_tracker_certificate' in data,
			ssrf_mitigation: 'ssrf_mitigation' in data,
			block_peers_on_privileged_ports: 'block_peers_on_privileged_ports' in data,
			upload_slots_behavior: ('upload_slots_behavior' in data
				? +data.upload_slots_behavior?.toString()
				: undefined) as QBittorrentPreferences['upload_slots_behavior'],
			upload_choking_algorithm: ('upload_choking_algorithm' in data
				? +data.upload_choking_algorithm?.toString()
				: undefined) as QBittorrentPreferences['upload_choking_algorithm'],
			announce_to_all_trackers: 'announce_to_all_trackers' in data,
			announce_to_all_tiers: 'announce_to_all_tiers' in data,
			announce_ip: data.announce_ip?.toString(),
			max_concurrent_http_announces:
				'max_concurrent_http_announces' in data ? +data.max_concurrent_http_announces?.toString() : undefined,
			stop_tracker_timeout: 'stop_tracker_timeout' in data ? +data.stop_tracker_timeout?.toString() : undefined,
			peer_turnover: 'peer_turnover' in data ? +data.peer_turnover?.toString() : undefined,
			peer_turnover_cutoff: 'peer_turnover_cutoff' in data ? +data.peer_turnover_cutoff?.toString() : undefined,
			peer_turnover_interval: 'peer_turnover_interval' in data ? +data.peer_turnover_interval?.toString() : undefined,
			request_queue_size: 'request_queue_size' in data ? +data.request_queue_size?.toString() : undefined,
		}
	}
}
